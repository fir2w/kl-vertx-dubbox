<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	

	<!-- This Spring config file is NOT used in Alfresco, as the Activiti engine is wired in a different way there -->
	<!-- springApplicationContextUtil,可以直接访问spring上下文 -->
	<bean id="springApplicationContextUtil" class="com.klwork.common.utils.spring.SpringApplicationContextUtil">
	</bean>
  
	<bean id="dbProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
		<!-- Allow other PropertyPlaceholderConfigurer to run as well -->
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="configLocation">
			<value>classpath:/mybaits-config/sql-map-business-config.xml
			</value>
		</property>
	</bean>
	
	<bean id="baseMybaitsDao" class="com.klwork.common.dao.BaseMybaitsDao">
		<property name="sqlSessionFactory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 进行初始 -->
	<bean id="demoDataGenerator" class="com.klwork.business.web.DemoDataGenerator" init-method="init">
		<property name="processEngine" ref="processEngine" />
		<property name="createDemoUsersAndGroups" value="true" />
		<property name="createDemoProcessDefinitions" value="true" />
		<property name="createDemoModels" value="true" />
	</bean>

	<bean id="processEngineConfiguration" class="com.klwork.business.web.CusSpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="true" />
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration"/>
	</bean>

	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />

</beans>